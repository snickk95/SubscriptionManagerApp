// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SubscriptionManagerApp.Entities;

#nullable disable

namespace SubscriptionManagerApp.Migrations
{
    [DbContext(typeof(SubscriptionManagerContext))]
    partial class SubscriptionManagerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SubscriptionManagerApp.Entities.Subscription", b =>
                {
                    b.Property<int>("SubscriptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubscriptionId"));

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ServiceName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubscriptionId");

                    b.ToTable("Subscriptions");

                    b.HasData(
                        new
                        {
                            SubscriptionId = 1,
                            Price = 14.99m,
                            ServiceName = "Disney Plus"
                        },
                        new
                        {
                            SubscriptionId = 2,
                            Price = 9.99m,
                            ServiceName = "Spotify"
                        },
                        new
                        {
                            SubscriptionId = 3,
                            Price = 18.99m,
                            ServiceName = "Netflix"
                        });
                });

            modelBuilder.Entity("SubscriptionManagerApp.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "sherlock@example.com",
                            FirstName = "Sherlock",
                            LastName = "Holmes"
                        },
                        new
                        {
                            UserId = 2,
                            Email = "john@example.com",
                            FirstName = "John",
                            LastName = "Watson"
                        });
                });

            modelBuilder.Entity("SubscriptionManagerApp.Entities.UserSubscription", b =>
                {
                    b.Property<int>("SubscriptionId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("SubscriptionId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserSubscriptions");

                    b.HasData(
                        new
                        {
                            SubscriptionId = 1,
                            UserId = 1
                        },
                        new
                        {
                            SubscriptionId = 2,
                            UserId = 1
                        },
                        new
                        {
                            SubscriptionId = 3,
                            UserId = 1
                        },
                        new
                        {
                            SubscriptionId = 2,
                            UserId = 2
                        },
                        new
                        {
                            SubscriptionId = 3,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("SubscriptionManagerApp.Entities.UserSubscription", b =>
                {
                    b.HasOne("SubscriptionManagerApp.Entities.Subscription", "Subscription")
                        .WithMany("UserSubscriptions")
                        .HasForeignKey("SubscriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SubscriptionManagerApp.Entities.User", "User")
                        .WithMany("UserSubscriptions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subscription");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SubscriptionManagerApp.Entities.Subscription", b =>
                {
                    b.Navigation("UserSubscriptions");
                });

            modelBuilder.Entity("SubscriptionManagerApp.Entities.User", b =>
                {
                    b.Navigation("UserSubscriptions");
                });
#pragma warning restore 612, 618
        }
    }
}
